# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-05-05 09:05
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import events.fields
import events.models


class Migration(migrations.Migration):

    replaces = [('events', '0001_initial'), ('events', '0002_auto_20170715_1417'), ('events', '0003_event_max_team_size'), ('events', '0004_auto_20170804_0029'), ('events', '0005_auto_20170810_1748'), ('events', '0006_auto_20170813_2236'), ('events', '0007_auto_20170814_1141'), ('events', '0008_auto_20170814_1204'), ('events', '0009_event_help_text'), ('events', '0010_event_examples_text'), ('events', '0011_auto_20180408_1252')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('current', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('script', models.TextField(blank=True)),
                ('style', models.TextField(blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='theme',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theme', to='events.Theme'),
        ),
        migrations.AlterField(
            model_name='event',
            name='current',
            field=events.fields.SingleTrueBooleanField(),
        ),
        migrations.AddField(
            model_name='event',
            name='max_team_size',
            field=models.IntegerField(default=0, help_text='Maximum size for a team at this event, or 0 for no limit.', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.CreateModel(
            name='EventFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('file', models.FileField(upload_to=events.models.event_file_path)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='eventfile',
            unique_together=set([('event', 'slug')]),
        ),
        migrations.AddField(
            model_name='event',
            name='about_text',
            field=models.TextField(default='This page should contain information about the event', help_text='Content for the event about page'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='rules_text',
            field=models.TextField(default='This page should contain the event rules', help_text='Content for the event rules page'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='help_text',
            field=models.TextField(blank=True, help_text='Content for the event help page'),
        ),
        migrations.AddField(
            model_name='event',
            name='examples_text',
            field=models.TextField(blank=True, help_text='Content for the example puzzles for this event'),
        ),
        migrations.AlterField(
            model_name='event',
            name='about_text',
            field=models.TextField(blank=True, help_text='Content for the event about page'),
        ),
        migrations.AlterField(
            model_name='event',
            name='rules_text',
            field=models.TextField(blank=True, help_text='Content for the event rules page'),
        ),
    ]
