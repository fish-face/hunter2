image: registry.gitlab.com/rconan/docker-and-compose:0.0.1

variables:
  DOCKER_DRIVER: overlay2

services:
  - docker:17.06.0-ce-dind

stages:
  - check
  - build
  - doc
  - test
  - release

before_script:
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - chmod -R g-w,o-w .
  - ln -s docker-compose.test.yml docker-compose.yml

check:flake8:
  stage: check
  script:
    - docker-compose -f docker-compose.check.yml run --rm flake8 --verbose

check:jshint:
  stage: check
  script:
    - docker-compose -f docker-compose.check.yml run --rm jshint

build:app:
  stage: build
  variables:
    SERVICE: app
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$SERVICE:$CI_COMMIT_REF_NAME
    IMAGE_FILE: $SERVICE:$CI_COMMIT_REF_NAME.tar
  script:
    - docker-compose build $SERVICE
    - install -d -m 777 diagram
    - docker-compose run --entrypoint "sh" $SERVICE -c "python manage.py graph_models -a > diagram/models.dot"
    - docker save -o $IMAGE_FILE $IMAGE_TAG
  artifacts:
    expire_in: 90 days
    name: app-container
    paths:
      - $IMAGE_FILE
      - diagram/models.dot

build:web:
  stage: build
  variables:
    SERVICE: web
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$SERVICE:$CI_COMMIT_REF_NAME
    IMAGE_FILE: $SERVICE:$CI_COMMIT_REF_NAME.tar
  script:
    - docker-compose build $SERVICE
    - docker save -o $IMAGE_FILE $IMAGE_TAG
  artifacts:
    expire_in: 90 days
    name: web-container
    paths:
      - $IMAGE_FILE

doc:graph:
  stage: doc
  dependencies:
    - build:app
  script:
    - docker-compose -f docker-compose.check.yml run --rm dot
  artifacts:
    expire_in: 90 days
    name: models-graph
    paths:
      - diagram/models.svg

test:
  stage: test
  dependencies:
    - build:app
  variables:
    SERVICE: app
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$SERVICE:$CI_COMMIT_REF_NAME
    IMAGE_FILE: $SERVICE:$CI_COMMIT_REF_NAME.tar
  script:
    - docker load -i $IMAGE_FILE
    - install -d -m 777 coverage
    - docker-compose run --entrypoint "python" $SERVICE -Wd -m coverage run --source . manage.py test -v 2
    - docker-compose run --entrypoint "python" $SERVICE -m coverage html
    - docker-compose run --entrypoint "python" $SERVICE -m coverage report
  artifacts:
    expire_in: 180 days
    name: coverage
    paths:
      - coverage/
  coverage: /\d+\%\s*$/

release:app:
  stage: release
  dependencies:
    - build:app
  variables:
    SERVICE: app
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$SERVICE:$CI_COMMIT_REF_NAME
    IMAGE_FILE: $SERVICE:$CI_COMMIT_REF_NAME.tar
  script:
    - docker load -i $IMAGE_FILE
    - docker-compose push
  only:
    - tags

release:web:
  stage: release
  dependencies:
    - build:web
  variables:
    SERVICE: web
    IMAGE_TAG: $CI_REGISTRY_IMAGE/$SERVICE:$CI_COMMIT_REF_NAME
    IMAGE_FILE: $SERVICE:$CI_COMMIT_REF_NAME.tar
  script:
    - docker load -i $IMAGE_FILE
    - docker-compose push
  only:
    - tags
