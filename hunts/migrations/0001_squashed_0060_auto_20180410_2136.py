# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-05-05 09:08
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import django.utils.timezone
import enumfields.fields
import hunts.models
import sortedm2m.fields
import uuid

from enumfields import Enum


class Migration(migrations.Migration):

    replaces = [('hunts', '0001_initial'), ('hunts', '0002_blank_theme'), ('hunts', '0003_team_is_admin'), ('hunts', '0004_teampuzzledata_userpuzzledata'), ('hunts', '0005_auto_20160318_1359'), ('hunts', '0006_auto_20161128_0743'), ('hunts', '0007_auto_20170108_1622'), ('hunts', '0008_auto_20170110_2055'), ('hunts', '0009_episode_name'), ('hunts', '0010_auto_20170115_2335'), ('hunts', '0011_puzzle_runtime'), ('hunts', '0012_auto_20170225_1301'), ('hunts', '0013_answer_runtime'), ('hunts', '0014_auto_20170226_1243'), ('hunts', '0015_auto_20170226_1243'), ('hunts', '0016_auto_20170227_0953'), ('hunts', '0017_auto_20170227_0954'), ('hunts', '0018_auto_20170308_2001'), ('hunts', '0019_auto_20170308_2107'), ('hunts', '0020_teamdata_userdata'), ('hunts', '0021_auto_20170312_2020'), ('hunts', '0022_puzzlefile'), ('hunts', '0023_teampuzzledata_start_time'), ('hunts', '0023_auto_20170328_1855'), ('hunts', '0024_merge_20170328_2136'), ('hunts', '0025_auto_20170424_1904'), ('hunts', '0026_episode_parallel'), ('hunts', '0027_puzzle_start_date'), ('hunts', '0028_puzzle_headstart_granted'), ('hunts', '0029_auto_20170717_0109'), ('hunts', '0030_episode_prereqs'), ('hunts', '0031_auto_20170720_2215'), ('hunts', '0032_auto_20170720_2334'), ('hunts', '0033_auto_20170721_0919'), ('hunts', '0030_auto_20170721_1119'), ('hunts', '0031_auto_20170721_1324'), ('hunts', '0034_merge_20170722_1102'), ('hunts', '0035_auto_20170722_1111'), ('hunts', '0036_annoucement'), ('hunts', '0037_auto_20170725_2308'), ('hunts', '0038_guess_correct_for'), ('hunts', '0039_guess_by_team'), ('hunts', '0040_populate_guess_by_team'), ('hunts', '0041_guess_by_team_not_null'), ('hunts', '0042_guess_correct_current'), ('hunts', '0038_auto_20170728_1637'), ('hunts', '0043_merge_20170731_2304'), ('hunts', '0044_auto_20170802_0034'), ('hunts', '0045_auto_20170802_1658'), ('hunts', '0046_auto_20170804_0029'), ('hunts', '0045_auto_20170802_2340'), ('hunts', '0047_merge_20170804_1659'), ('hunts', '0048_auto_20170804_1857'), ('hunts', '0049_auto_20170808_2337'), ('hunts', '0050_auto_20170813_1846'), ('hunts', '0051_auto_20170813_2352'), ('hunts', '0052_auto_20170814_0007'), ('hunts', '0050_auto_20170813_2236'), ('hunts', '0053_merge_20170814_0040'), ('hunts', '0054_auto_20170814_1058'), ('hunts', '0055_auto_20170814_1204'), ('hunts', '0056_auto_20170826_1314'), ('hunts', '0057_auto_20170829_1544'), ('hunts', '0058_auto_20170830_1151'), ('hunts', '0059_auto_20180408_1305'), ('hunts', '0060_auto_20180410_2136')]

    initial = True

    dependencies = [
        ('events', '0003_event_max_team_size'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0004_auto_20170804_0029'),
        ('events', '0002_auto_20170715_1417'),
        ('teams', '0003_auto_20170425_1400'),
        ('events', '0010_event_examples_text'),
        ('events', '0001_initial'),
        ('teams', '0001_initial'),
        ('teams', '0006_merge_20170802_2329'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Guess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guess', models.TextField()),
                ('given', models.DateTimeField(auto_now_add=True)),
                ('by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.UserProfile')),
            ],
            options={
                'verbose_name_plural': 'Guesses',
            },
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('time', models.DurationField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Puzzle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(unique=True)),
                ('content', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Unlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Puzzle')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UnlockAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guess', models.TextField()),
                ('unlock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Unlock')),
                ('runtime', models.CharField(choices=[('I', 'IFrame Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime'), ('S', 'Static Runtime')], default='S', max_length=1)),
            ],
        ),
        migrations.AddField(
            model_name='hint',
            name='puzzle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Puzzle'),
        ),
        migrations.AddField(
            model_name='guess',
            name='for_puzzle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Puzzle'),
        ),
        migrations.AddField(
            model_name='answer',
            name='for_puzzle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Puzzle'),
        ),
        migrations.CreateModel(
            name='TeamPuzzleData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Puzzle')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Team')),
                ('start_time', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name_plural': 'Team puzzle data',
            },
        ),
        migrations.CreateModel(
            name='UserPuzzleData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Puzzle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.UserProfile')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
            ],
            options={
                'verbose_name_plural': 'User puzzle data',
            },
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='events.Event')),
                ('puzzles', sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='episodes', to='hunts.Puzzle')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='episode',
            unique_together=set([('event', 'start_date')]),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='runtime',
            field=models.CharField(choices=[('S', 'Static Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime')], default='S', max_length=1),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='title',
            field=models.CharField(max_length=255, unique=True),
        ),
        migrations.AddField(
            model_name='answer',
            name='runtime',
            field=models.CharField(choices=[('I', 'IFrame Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime'), ('S', 'Static Runtime')], default='S', max_length=1),
        ),
        migrations.AlterField(
            model_name='answer',
            name='answer',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='answer',
            name='answer',
            field=models.TextField(max_length=255),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='cb_content',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='cb_runtime',
            field=models.CharField(choices=[('S', 'Static Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime')], default='S', max_length=1),
        ),
        migrations.AlterField(
            model_name='answer',
            name='answer',
            field=models.TextField(),
        ),
        migrations.CreateModel(
            name='TeamData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Team')),
            ],
            options={
                'verbose_name_plural': 'Team puzzle data',
            },
        ),
        migrations.CreateModel(
            name='UserData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(default={})),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.UserProfile')),
            ],
            options={
                'verbose_name_plural': 'User puzzle data',
            },
        ),
        migrations.AlterField(
            model_name='episode',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event'),
        ),
        migrations.AlterField(
            model_name='episode',
            name='puzzles',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, to='hunts.Puzzle'),
        ),
        migrations.CreateModel(
            name='PuzzleFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField()),
                ('file', models.FileField(upload_to='puzzles/')),
                ('puzzle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hunts.Puzzle')),
            ],
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='cb_runtime',
            field=models.CharField(choices=[('S', 'Static Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Run')], default='S', max_length=1),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='runtime',
            field=models.CharField(choices=[('S', 'Static Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Run')], default='S', max_length=1),
        ),
        migrations.AddField(
            model_name='episode',
            name='parallel',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='start_date',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='headstart_granted',
            field=models.DurationField(default=datetime.timedelta(0), help_text='How much headstart this puzzle gives to later episodes which gain headstart from this episode'),
        ),
        migrations.AddField(
            model_name='episode',
            name='headstart_from',
            field=models.ManyToManyField(blank=True, help_text='Episodes which should grant a headstart for this episode', to='hunts.Episode'),
        ),
        migrations.AddField(
            model_name='episode',
            name='prequels',
            field=models.ManyToManyField(blank=True, help_text='Set of episodes which must be completed before starting this one', related_name='sequels', to='hunts.Episode'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='cb_runtime',
            field=models.CharField(choices=[('I', 'IFrame Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime'), ('S', 'Static Runtime')], default='S', max_length=1),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='runtime',
            field=models.CharField(choices=[('I', 'IFrame Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime'), ('S', 'Static Runtime')], default='S', max_length=1),
        ),
        migrations.AddField(
            model_name='guess',
            name='correct_for',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hunts.Answer'),
        ),
        migrations.AddField(
            model_name='guess',
            name='by_team',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='teams.Team'),
        ),
        migrations.AlterField(
            model_name='guess',
            name='by_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Team'),
        ),
        migrations.AddField(
            model_name='guess',
            name='correct_current',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='episode',
            name='flavour',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='puzzle',
            name='flavour',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='guess',
            name='by_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='teams.Team'),
        ),
        migrations.AlterUniqueTogether(
            name='puzzlefile',
            unique_together=set([('puzzle', 'slug')]),
        ),
        migrations.AlterModelOptions(
            name='teamdata',
            options={'verbose_name_plural': 'Team data'},
        ),
        migrations.AlterModelOptions(
            name='userdata',
            options={'verbose_name_plural': 'User data'},
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('posted', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField(blank=True)),
                ('type', enumfields.fields.EnumField(default='I', enum=hunts.models.AnnouncementType, max_length=1)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='events.Event')),
                ('puzzle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to='hunts.Puzzle')),
            ],
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='cb_content',
            field=models.TextField(blank=True, default='', verbose_name='Callback content'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='cb_runtime',
            field=models.CharField(choices=[('I', 'IFrame Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime'), ('S', 'Static Runtime')], default='S', help_text='Runtime for responding to an AJAX callback for this question, should return JSON', max_length=1, verbose_name='Callback runtime'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='flavour',
            field=models.TextField(blank=True, help_text='Separate flavour text for the puzzle. Should not be required for solving the puzzle', verbose_name='Flavour text'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='runtime',
            field=models.CharField(choices=[('I', 'IFrame Runtime'), ('L', 'Lua Runtime'), ('R', 'Regex Runtime'), ('S', 'Static Runtime')], default='S', help_text='Runtime for generating the question content', max_length=1),
        ),
        migrations.AlterField(
            model_name='hint',
            name='text',
            field=models.TextField(help_text='Text displayed when this clue is unlocked'),
        ),
        migrations.AlterField(
            model_name='puzzlefile',
            name='slug',
            field=models.SlugField(help_text='Precede the slug with a $ in the puzzle content to insert the URL of the file.'),
        ),
        migrations.AlterField(
            model_name='unlock',
            name='text',
            field=models.TextField(help_text='Text displayed when this clue is unlocked'),
        ),
        migrations.AlterField(
            model_name='puzzlefile',
            name='slug',
            field=models.SlugField(help_text='Include the URL of the file in puzzle content using $slug or ${slug}.'),
        ),
        migrations.AlterField(
            model_name='puzzlefile',
            name='file',
            field=models.FileField(upload_to=hunts.models.puzzle_file_path),
        ),
        migrations.AlterField(
            model_name='teamdata',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.Team', unique=True),
        ),
        migrations.AlterField(
            model_name='teampuzzledata',
            name='data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='teampuzzledata',
            name='start_time',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='teampuzzledata',
            unique_together=set([('puzzle', 'team')]),
        ),
        migrations.AlterField(
            model_name='userdata',
            name='data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='userdata',
            unique_together=set([('event', 'user')]),
        ),
        migrations.AlterField(
            model_name='userpuzzledata',
            name='data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='userpuzzledata',
            unique_together=set([('puzzle', 'user')]),
        ),
        migrations.AlterField(
            model_name='teamdata',
            name='team',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='teams.Team'),
        ),
        migrations.AlterField(
            model_name='puzzlefile',
            name='slug',
            field=models.CharField(help_text='Include the URL of the file in puzzle content using $slug or ${slug}.', max_length=50),
        ),
        migrations.AlterField(
            model_name='teamdata',
            name='data',
            field=django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='episode',
            name='parallel',
            field=models.BooleanField(default=False, help_text='Allow players to answer riddles in this episode in any order they like'),
        ),
    ]
